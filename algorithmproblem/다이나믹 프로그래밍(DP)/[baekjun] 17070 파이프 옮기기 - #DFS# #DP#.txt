https://www.acmicpc.net/problem/17070
----------------------------------------------------------------------------------------------------------------
##재귀(DFS백트레킹) - 시간초과 코드
import sys

sys.stdin = open("input.txt","rt")

def DFS(r,c,pipe) :
    global ans,tmp
    if r==N-1 and c==N-1 :
        ans += 1
        return

    if c+1 < N and house[r][c+1] == 0 and pipe != 3: ## 파이프 1 (가로)
        DFS(r,c+1,1) ## 오른쪽 이동
    if r+1 < N and house[r+1][c] == 0 and pipe != 1: ## 파이프 3 (세로)
        DFS(r+1,c,3) ## 아래 이동
    if r+1<N and c+1<N and house[r+1][c+1] == 0 and house[r][c+1]==0 and house[r+1][c] == 0: ## 파이프 2 (대각)
        DFS(r+1,c+1,2)

    return

if __name__ == "__main__" :
    N = int(input())
    house = []
    for _ in range (N) :
        house.append(list(map(int,input().split()))) ## 빈칸 0, 벽 1
    ans = 0
    DFS(0,1,1)
    print(ans)

##dp(3차원) - 통과
import sys

sys.stdin = open("input.txt","rt")


if __name__ == "__main__" :
    N = int(input())
    house = [[1]*N]
    for _ in range (N) :
        house.append(list(map(int,input().split()))) ## 빈칸 0, 벽 1
    house.append([[1]*N]) ## dummy추가
    dp = [[[0,0,0] for _ in range (N)] for _ in range (N+2)] ## dp[i][j][k] : (i,j)좌표에 k로 도달했을 때 방법 수
    dp[1][1][0] = 1 ## (0,1)점에 가로 파이프로 왔으므로 (초기값)
    for i in range (1,N+1) : ## 행 좌표
        for j in range (1,N) : ## 열 좌표
            if house[i][j] == 1 : ## 벽인 경우
                continue
            if i == 1 and j == 1 : ## 시작점의 경우
                continue
            ## 그림의 조건 더 고려해야함!
            ##(i,j)좌표에 가로막대로 오는 경우
            dp[i][j][0] = dp[i][j-1][1] + dp[i][j-1][0]
            ##(i,j)좌표에 대각막대로 오는 경우
            if house[i-1][j] == 0 and house[i][j-1] == 0 :
                dp[i][j][1] = dp[i - 1][j - 1][0] + dp[i - 1][j - 1][1] + dp[i - 1][j - 1][2]
            ##(i,j)좌표에 세로막대로 오는 경우
            dp[i][j][2] = dp[i - 1][j][1] + dp[i - 1][j][2]
    ans = dp[N][N-1][0] + dp[N][N-1][1] + dp[N][N-1][2]
    print(ans)