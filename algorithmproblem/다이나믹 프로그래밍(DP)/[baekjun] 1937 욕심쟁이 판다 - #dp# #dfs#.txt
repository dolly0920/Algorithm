https://www.acmicpc.net/problem/1937
----------------------------------------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(1000000)

##sys.stdin = open("input.txt","rt")

dr = [0,0,1,-1]
dc = [1,-1,0,0]

def DFS(r,c) :
    global ans
    if dp[r][c] != -1 : ## 이미 계산한 부분에 대해서 다시 계산하지 않음
        return dp[r][c]

    dp[r][c] = 1 ## 처음 시작
    for i in range (4) :
        nr = r + dr[i]
        nc = c + dc[i]
        if 0<=nr<n and 0<=nc<n and forest[nr][nc] > forest[r][c] : ## 범위 내 더 큰 대나무
            dp[r][c] = max(dp[r][c],DFS(nr,nc)+1)

    ans = max(ans,dp[r][c])
    return dp[r][c] ## r,c에서 시작했을 때의 LIS 길이값 반환


if __name__ == "__main__" :
    n = int(input()) ## 대나무 숲의 크기
    forest = []
    for _ in range (n) :
        forest.append(list(map(int,input().split())))
    ans = 0
    dp = [[-1]*n for _ in range (n)]
    for i in range (n) :
        for j in range (n) :
            DFS(i,j)
    print(ans)