너비우선탐색(BFS)는 그래프의 임의의 한 정점에서 출발하여, 연결된 정점들 중 하나에 대해서 너비 순으로 먼저 탐색해 나가는 탐색법이다. 이 탐색방법은 장기, 체스, 미로찾기, 무가중치 그래프의 최단경로 탐색 등의 다양한 분야에 활용되는 알고리즘이다. 예를 들어 다음과 같은 그래프를 보자.



 
이 그래프에서 1번 정점에서 출발한 너비우선탐색 결과는 다음과 같다.
1-2-4-5-3-6-7
단, 한 정점에서 갈 수 있는 곳이 여러 곳일 경우 먼저 입력된 정점부터 먼저 방문한다. FIFO 즉, 2 4, 2 3 순으로 입력되었다면 2번 정점에서 4번을 먼저 방문하고 나중에 3번을 방문하도록 작성해야 한다.
문제에 주어지는 모든 그래프는 양방향 무가중치 그래프이다.
----------------------------------------------------------------------------------------------------------------
//My Sol
#include <stdio.h>
 
int N, M;
int s[200+10];
int e[200+10];
int sol[200+10];
//int con[200+10][200+10];
int visited[200+10];
int queue[200*200+10];
int Wp,Rp,index;

void BFS(void)
{
	int data,i;

	queue[Wp++] = 1;	// 1 대입
	visited[1] = 1;

	while(Rp<Wp)
	{
		data = queue[Rp++];
		sol[index] = data;

		for(i=1;i<=M;i++)
		{
			if(s[i] == data && visited[e[i]] == 0)
			{
				visited[e[i]] = 1;
				queue[Wp++] = e[i];
			}
			if(e[i] == data && visited[s[i]] == 0)
			{
				visited[s[i]] = 1;
				queue[Wp++] = s[i];
			}
		}
		index++;
	}
}
 
int main(void)
{
      int i;
 
      // 입력받는 부분
      scanf("%d %d", &N, &M);	// 정점, 간선
      for(i=1;i<=M;i++)
      {
            scanf("%d %d", &s[i], &e[i]);	// 간선 연결도 // 먼저 입력된 간선부터
      }
 
      // 여기서부터 작성
	  BFS();
 
      // 출력하는 부분
      printf("%d", sol[0]);
      for(i=1; i<N; i++)
      {
            printf(" %d", sol[i]);
      }
 
      return 0;
}
