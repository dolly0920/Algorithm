https://www.acmicpc.net/problem/11062
----------------------------------------------------------------------------------------------------------------
import sys

sys.stdin = open("input.txt","rt")

def solve(left,right,turn) : ## left (왼쪽 인덱스), right (오른쪽 인덱스), 순서 ( 0: 근우, 1: 명우) ## left-right에서 근우가 얻을 수 있는 점수
    if left == right : ## 둘의 인덱스가 같은 경우 종료된다.
        if turn == 0 :
            return arr[left]
        else :
            return 0

    if dp[left][right] != -1 :
        return dp[left][right]

    if turn == 0 : ## 근우 차례
        dp[left][right] = max(solve(left+1,right,(turn+1)%2)+arr[left],solve(left,right-1,(turn+1)%2)+arr[right])
    else : ## 명우 차례
        dp[left][right] = min(solve(left+1,right,(turn+1)%2),solve(left,right-1,(turn+1)%2)) ## 명우 차례이므로 뽑지 않고 각 경우 중 최소로 간다. (why? 명우는 최대로 뽑았을 것이므로)

    return dp[left][right]



if __name__ == "__main__" :
    T = int(input())
    for _ in range (T) :
        N = int(input())
        dp = [[-1]*N for _ in range (N)] ## dp[i][j] = i-j사이에 얻을 수 있는 근우의 최대 점수 (문제의 조건을 따르면서 얻는 최댓값)

        arr = list(map(int,input().split()))

        print(solve(0,N-1,0))