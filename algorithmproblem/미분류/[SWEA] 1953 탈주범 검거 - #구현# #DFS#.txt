https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PpLlKAQ4DFAUq
----------------------------------------------------------------------------------------------------------------
import sys
from collections import deque

sys.stdin = open("input.txt","rt")

pipe = {1:[(0,1),(1,0),(0,-1),(-1,0)],
        2:[(1,0),(-1,0)],
        3:[(0,1),(0,-1)],
        4:[(-1,0),(0,1)],
        5:[(0,1),(1,0)],
        6:[(0,-1),(1,0)],
        7:[(-1,0),(0,-1)]}

def BFS() :
    q = deque()
    q.append((R,C))
    visit[R][C] = 1
    ans = 0
    time = L

    while True :
        time -= 1
        q_size = len(q)
        ans += q_size
        if time == 0 :
            break
        while q_size :
            q_size -= 1
            r,c = q.popleft()
            for dr,dc in pipe[MAP[r][c]] : ## MAP[r][c]에 해당하는 파이프
                nr = r + dr
                nc = c + dc
                if nr<0 or nr>=N or nc<0 or nc>=M or MAP[nr][nc] == 0 or visit[nr][nc] == 1: ## 범위를 벗어나면, 방문한 곳이라면, 아무것도 없는 칸
                    continue
                if (-dr,-dc) not in pipe[MAP[nr][nc]] : ## 다음 파이프가 갈 수 없는 곳이라면
                    continue
                visit[nr][nc] = 1
                q.append((nr,nc))
    return ans


if __name__ == "__main__" :
    T = int(input())
    for test_case in range (1,T+1) :
        N,M,R,C,L = map(int,input().split())
        MAP = []
        for _ in range (N) :
            MAP.append(list(map(int,input().split())))
        visit = [[0]*M for _ in range (N)]
        print("#%d %d"%(test_case,BFS()))