https://www.acmicpc.net/problem/10253
----------------------------------------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(100000)
sys.stdin = open("input.txt","rt")

def solve_num(a,b) : ## 최대 숫자 구하기
    if int(b/a) == b/a : ## 정수일 때
        return int(b/a)
    else :
        return int(b/a)+1

def DFS(a,b) :
    if (b/a) == solve_num(a,b) : ## 마지막 요소로 지워질 때
        print(solve_num(a,b))
        return
    tmp = solve_num(a,b) ## x1 구하기
    #print(tmp)
    DFS(a*tmp-b,b*tmp)

if __name__ == "__main__" :
    T = int(input())
    for _ in range (T) :
        a,b = map(int,input().split())
        #print(solve_num(a,b))
        DFS(a,b)

//sol2 (주석 추가)
import sys
sys.setrecursionlimit(100000)
sys.stdin = open("input.txt","rt")

def solve_num(a,b) : ## 최대 숫자 구하기
    if int(b/a) == b/a : ## 정수일 때
        return int(b/a)
    else :
        return int(b/a)+1

## 재귀를 사용했을 때는 main문에서 none 출력 ## 트리로 생각했을때 가지치기가 하나만 되는 한방향 트리
## 마지막 노드에서 return이 된다면 루트로 다시 돌아와서 return이 안되는것인가?
def DFS(a,b) :
    if (b/a) == solve_num(a,b) : ## 마지막 요소로 지워질 때
        ##print(solve_num(a,b))
        return solve_num(a,b)
    tmp = solve_num(a,b) ## x1 구하기
    #print(tmp)
    x = DFS(a*tmp-b,b*tmp) ## DFS를 통한 출력은 이렇게 해야함
    return x ## 결국 결과값은 여기의 리턴값이므로 두번 써줘야함

## 이렇게 구성했을 때는 main문에서 올바른 답 출력
def solve(a,b) :
    while True :
        if (b/a) == solve_num(a,b) :
            return solve_num(a,b)
        tmp = solve_num(a,b)
        a = a*tmp-b
        b = b*tmp


if __name__ == "__main__" :
    T = int(input())
    for _ in range (T) :
        a,b = map(int,input().split())
        #print(solve_num(a,b))
        print(DFS(a,b))