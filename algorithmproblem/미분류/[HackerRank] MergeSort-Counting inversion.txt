https://www.hackerrank.com/challenges/ctci-merge-sort/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=sorting
----------------------------------------------------------------------------------------------------------------
import sys

sys.stdin = open("input.txt","rt")

## merge_sort
def merge(left,right) :
    global ans
    left_index = 0
    right_index = 0
    sorted_arr = []


    while left_index < len(left) and right_index < len(right) :
        if left[left_index] > right[right_index] :
            ans += len(left)-left_index ## counting_inversion => [left배열]+[right배열]이 처음의 모양 right_index원소를 끌어온다는 것은 right_index의 원소를 left_index의 위치까지 끌어온다는 것을 의미한다.
            sorted_arr.append(right[right_index])
            right_index += 1
        else :
            sorted_arr.append(left[left_index])
            left_index += 1

    if left_index < len(left) :
        sorted_arr += left[left_index:]
    if right_index < len(right) :
        sorted_arr += right[right_index:]

    return sorted_arr


def merge_sort(arr) :
    if len(arr) <= 1 :
        return arr

    mid = len(arr)//2
    left = merge_sort(arr[:mid])
    right = merge_sort(arr[mid:])

    return merge(left,right)

if __name__ == "__main__" :
    T = int(input())
    for _ in range (T) :
        ans = 0 ##전역 변수
        N = int(input()) ## 배열의 길이
        arr = list(map(int,input().split()))
        merge_sort(arr)
        print(ans)