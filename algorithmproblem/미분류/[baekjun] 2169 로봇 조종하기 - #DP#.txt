https://www.acmicpc.net/problem/2169
----------------------------------------------------------------------------------------------------------------
import sys

sys.stdin = open("input.txt","rt")

if __name__ == "__main__" :
    ## 모든 로봇은 왼쪽에서 오는 경우(0), 위에서 오는 경우(1), 오른쪽에서 오는 경우(2)의 경우만 있다.
    N,M = map(int,input().split()) ## N개의 줄, M개의 수
    dp = [[[-sys.maxsize]*3 for _ in range (M)] for _ in range (N)] ## dp[r][c][0] : 왼쪽에서 오는 경우의 최대

    MAP = []
    for _ in range (N) :
        MAP.append(list(map(int,input().split())))

    dp[0][0][0] = MAP[0][0]
    dp[0][0][1] = MAP[0][0]
    dp[0][0][2] = MAP[0][0] ## (0,0)은 모두 평등하게 둔다.
    ## 첫번째 행 연산 (첫번쨰 행은 왼쪽에서 오는 경우만 존재한다.)
    for i in range (1,M) :
        dp[0][i][0] = max(dp[0][i-1]) + MAP[0][i] ## 첫번째 행 ( 왼쪽에서 오는 경우 갱신 ) 1행은 이 경우만 존재한다.

    for i in range (1,N) : ## 행
        for j in range (M) :
            dp[i][j][1] = max(dp[i-1][j]) + MAP[i][j] ## 위에서 오는 경우 갱신
        for j in range (1,M) :
            dp[i][j][0] = max(dp[i][j-1]) + MAP[i][j] ## 왼쪽에서 오는 경우 갱신
        for j in range (M-2,-1,-1) : ## 오른쪽에서 오는 경우 갱신
            dp[i][j][2] = max(dp[i][j+1][1],dp[i][j+1][2])+MAP[i][j] ## 오른쪽에서 오는 경우 갱신

    print(max(dp[N-1][M-1]))