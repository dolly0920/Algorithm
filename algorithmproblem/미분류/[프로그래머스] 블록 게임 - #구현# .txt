https://programmers.co.kr/learn/courses/30/lessons/42894
----------------------------------------------------------------------------------------------------------------
def drop_block(col,length,arr) : ## 열 번호, 게임판 크기
    for i in range (length) :
        if arr[i][col] != 0 :
            return i-1
    return length-1 ## 블록 행 번호 출력

def solution(board):
    answer = 0
    length = len(board)
    while True :
        visit = [[0]*length for _ in range (length)]

        flag = 1
        ## **탐색
        for i in range (length-1) :
            r1 = drop_block(i,length,board)
            r2 = drop_block(i+1,length,board)
            if r1 != r2 or r1==-1 or r2==-1 or r1==length-1 or r2==length-1:
                continue
            ## ㄴ 확인
            if i>0 and board[r1][i-1] == board[r1+1][i-1] and board[r1+1][i-1] == board[r1+1][i] and board[r1+1][i] == board[r1+1][i+1] :
                if not (visit[r1][i - 1] or visit[r1 + 1][i - 1] or visit[r1 + 1][i] or visit[r1 + 1][i + 1]) :
                    flag = 0
                    answer += 1
                    visit[r1][i - 1],visit[r1 + 1][i - 1],visit[r1 + 1][i],visit[r1 + 1][i + 1] = 1,1,1,1 ## 방문체크
                    board[r1][i-1],board[r1+1][i-1],board[r1+1][i],board[r1+1][i+1] = 0,0,0,0
            ## 반대
            if i<length-2 and board[r1+1][i] == board[r1+1][i+1] and board[r1+1][i+1]==board[r1+1][i+2] and board[r1+1][i+2] == board[r1][i+2] :
                if not (visit[r1+1][i] or visit[r1+1][i+1] or visit[r1+1][i+2] or visit[r1][i+2]) :
                    flag = 0
                    answer += 1
                    visit[r1 + 1][i],visit[r1 + 1][i + 1],visit[r1 + 1][i + 2],visit[r1][i + 2] = 1,1,1,1
                    board[r1 + 1][i],board[r1 + 1][i + 1],board[r1 + 1][i + 2],board[r1][i + 2] = 0,0,0,0
        ## 세로 두개 떨어뜨리는 경우 탐색
        for i in range (length) :
            r = drop_block(i,length,board)
            if r==length-1 or r-1 < 0:
                continue
            # ㄴ
            if i>0 and (board[r+1][i]==board[r+1][i-1] and board[r][i-1]==board[r-1][i-1] and board[r][i-1]==board[r+1][i-1]):
                if not (visit[r+1][i] or visit[r+1][i-1] or visit[r][i-1] or visit[r-1][i-1]) :
                    flag = 0
                    answer += 1
                    visit[r + 1][i],visit[r + 1][i - 1],visit[r][i - 1],visit[r - 1][i - 1] = 1,1,1,1
                    board[r+1][i],board[r+1][i-1],board[r][i-1],board[r-1][i-1] = 0,0,0,0
            ## 안쪽
            if i<length-1 and (board[r+1][i]==board[r+1][i+1] and board[r][i+1]==board[r-1][i+1] and board[r][i+1] == board[r+1][i+1]) :
                if not (visit[r+1][i] or visit[r+1][i+1] or visit[r][i+1] or visit[r-1][i+1]) :
                    flag = 0
                    answer += 1
                    visit[r + 1][i],visit[r + 1][i + 1],visit[r][i + 1],visit[r - 1][i + 1] = 1,1,1,1
                    board[r+1][i],board[r+1][i+1],board[r][i+1],board[r-1][i+1] = 0,0,0,0
        for i in range (length-2) :
            r1 = drop_block(i,length,board)
            r2 = drop_block(i+2,length,board)
            if r1 != r2 or r1==-1 or r2==-1 or r1==length-1 or r2==length-1 :
                continue
            if board[r1][i+1] == board[r1+1][i+1] and board[r1+1][i] == board[r1+1][i+2] and board[r1+1][i] == board[r1+1][i+1] :
                if not (visit[r1][i+1] or visit[r1+1][i+1] or visit[r1+1][i] or visit[r1+1][i+2]) :
                    flag = 0
                    answer += 1
                    visit[r1][i + 1],visit[r1 + 1][i + 1],visit[r1 + 1][i],visit[r1 + 1][i + 2] = 1,1,1,1
                    board[r1][i+1],board[r1+1][i+1],board[r1+1][i],board[r1+1][i+2] = 0,0,0,0
        if flag :
            break
    return answer