https://www.acmicpc.net/problem/9465
----------------------------------------------------------------------------------------------------------------
## 내가 쓴 코드 ( O(2*N) )
import sys

sys.stdin = open("input.txt","rt")

if __name__ == "__main__" :
    T = int(input())
    for _ in range (T) :
        n = int(input())
        MAP = []
        for _ in range (2) :
            MAP.append(list(map(int,input().split())))
        dp = [[0]*n for _ in range (2)]
        dp[0][0] = MAP[0][0]
        dp[1][0] = MAP[1][0]
        for i in range (1,n) :
            for j in range (2) :
                if i>=2 :
                    dp[j][i] = max(dp[(j+1)%2][i-1],dp[0][i-2],dp[1][i-2])+MAP[j][i]
                else :
                    dp[j][i] = dp[(j+1)%2][i-1]+MAP[j][i]
        print(max(dp[0][n-1],dp[1][n-1],dp[0][n-2],dp[1][n-2]))

## (상위권 코드) O(n)
t = int(input())
for i in range(t):
  s = []
  n = int(input())
  for k in range(2):
    s.append(list(map(int, input().split())))
  s[0][1] += s[1][0]
  s[1][1] += s[0][0]
  for j in range(2, n):
    s[0][j] += max(s[1][j - 1], s[1][j - 2])
    s[1][j] += max(s[0][j - 1], s[0][j - 2])
  print(max(s[0][n - 1], s[1][n - 1]))