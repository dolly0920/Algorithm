https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AWXRFInKex8DFAUo
----------------------------------------------------------------------------------------------------------------
import sys
from collections import deque

sys.stdin = open("input.txt","rt")

dx = [0,0,-1,1]
dy = [1,-1,0,0] ## 상(0), 하(1), 좌(2), 우(3)


if __name__ == "__main__" :
    T = int(input())
    for test_case in range (1,T+1) :
        q = deque()
        answer = 0
        N = int(input()) ## 원자들의 수
        for _ in range (N) :
            x,y,d,k = map(int,input().split()) ## 좌표(x,y),방향,에너지양
            q.append(((x+1000)*2,(y+1000)*2,d,k)) ## 양의 수로 처리 (좌표 중간에 만나는 경우는 *2로 처리)

        for _ in range (4002) :
            ##if certificate_test() :
            ##    break
            t = len(q)
            if t <= 1 : ## 원자가 1개 이하인 경우 충돌값이 x
                break
            visit = {} ## [방문좌표] : [에너지값] 으로 입력
            collision = set() ## 충돌 좌표 입력
            while t : ## 동일 시간에 이동하는 원자들
                t -= 1
                x,y,dir,energy = q.popleft()
                nx = x + dx[dir]
                ny = y + dy[dir]
                if nx > 4000 or nx < 0 or ny > 4000 or ny < 0 :
                    continue
                if (nx,ny) in visit : ## 충돌하는 경우
                    visit[(nx,ny)] += energy
                    collision.add((nx,ny)) ## 충돌 좌표 추가 (set이므로 중복값 자동처리)
                else : ## 충돌하지 않는 경우
                    visit[(nx,ny)] = energy
                    q.append((nx,ny,dir,energy)) ## 이 부분 처리 애매
            for x,y in collision : ## 충돌에너지
                answer += visit[(x,y)]
            t = len(q)
            while t : ## 충돌 원자 소멸
                t -= 1
                x,y,dir,energy = q.popleft()
                if (x,y) in collision : ## 충돌 좌표에 있는 경우
                    continue
                q.append((x,y,dir,energy))
        print("#%d %d"%(test_case,answer))