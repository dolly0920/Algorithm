https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5V61LqAf8DFAWu
----------------------------------------------------------------------------------------------------------------
import sys
from collections import deque

sys.stdin = open("input.txt","rt")

dr = [0,0,1,-1]
dc = [1,-1,0,0]

def BFS(x,y) :
    global ans
    q = deque()
    visit[x][y] = 1
    q.append((x,y))

    if city[x][y] == 1 : ## 시작하는 곳이 집이라면
        house_cnt = 1
    else :
        house_cnt = 0

    area = 1

    while q :
        area_cost = (area ** 2) + ((area - 1) ** 2)  ## 운영 비용
        house_cost = house_cnt * M  ## 집에서 지불하는 비용
        if house_cost - area_cost >= 0:  ## 보안회사가 손해를 보지 않는 경우
            ans = max(ans, house_cnt)
            if ans == h_cnt:
                break

        q_size = len(q)
        while q_size :
            q_size -= 1
            r,c = q.popleft()
            for i in range (4) :
                nr = r + dr[i]
                nc = c + dc[i]
                if nr<0 or nr>=N or nc<0 or nc>=N or visit[nr][nc] == 1 : ## 범위를 벗어나거나 방문한 곳인 경우
                    continue
                if city[nr][nc] == 1 : ## 집인 경우
                    house_cnt += 1
                visit[nr][nc] = 1
                q.append((nr,nc))
        area += 1  ## 마름모 영역을 구하기 위한 카운트
    return


if __name__ == "__main__" :
    T = int(input())
    for test_case in range (1,T+1) :
        N,M = map(int,input().split()) ## 도시의 크기, 집이 지불할 수 있는 비용
        city = []
        for _ in range (N) :
            city.append(list(map(int,input().split())))

        h_cnt = 0
        for i in range (N) :
            for j in range (N) :
                if city[i][j] == 1 :
                    h_cnt += 1

        ans = 0 ## 서비스를 제공할 수 있는 최대의 집의 수
        for i in range (N) :
            flag = False
            for j in range (N) :
                visit = [[0]*N for _ in range (N)]
                BFS(i,j)
                if ans == h_cnt :
                    flag = True
                    break
            if flag :
                break
        print("#%d %d"%(test_case,ans))